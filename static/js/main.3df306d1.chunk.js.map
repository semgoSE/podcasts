{"version":3,"sources":["img/persik.png","panels/Persik.js","App.js","index.js"],"names":["module","exports","platform","App","state","activePanel","form","name","description","img","podcast","timecode","time","title","mp3","go","setState","onChange","e","currentTarget","value","onChangeFile","input","files","reader","FileReader","onload","a","target","result","readAsDataURL","this","user","id","action","onClick","header","icon","stretched","left","disabled","before","src","size","mode","style","height","width","display","alignItems","justifyContent","controlSize","placeholder","top","indicator","defaultChecked","expandable","multiline","text","caption","paddingTop","map","vertical","fill","Component","bridge","send","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3df306d1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/persik.4e1ec840.png\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { platform, IOS } from '@vkontakte/vkui';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport PanelHeaderButton from '@vkontakte/vkui/dist/components/PanelHeaderButton/PanelHeaderButton';\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\n\nimport persik from '../img/persik.png';\nimport './Persik.css';\n\nconst osName = platform();\n\nconst Persik = props => (\n\t<Panel id={props.id}>\n\t\t<PanelHeader\n\t\t\tleft={<PanelHeaderButton onClick={props.go} data-to=\"home\">\n\t\t\t\t{osName === IOS ? <Icon28ChevronBack/> : <Icon24Back/>}\n\t\t\t</PanelHeaderButton>}\n\t\t>\n\t\t\tPersik\n\t\t</PanelHeader>\n\t\t<img className=\"Persik\" src={persik} alt=\"Persik The Cat\"/>\n\t</Panel>\n);\n\nPersik.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n};\n\nexport default Persik;\n","import React, { Component } from 'react';\nimport bridge from '@vkontakte/vk-bridge';\nimport View from '@vkontakte/vkui/dist/components/View/View';\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\nimport '@vkontakte/vkui/dist/vkui.css';\n\nimport Home from './panels/Home';\nimport Persik from './panels/Persik';\nimport { PanelHeader, Panel, Div, Placeholder, Root, Button, PanelHeaderBack, Input, FormLayout, Card, SimpleCell, Textarea, Separator, Checkbox, Avatar, File, RichCell, Link, Group, Header, Text, List, FixedLayout } from '@vkontakte/vkui';\nimport { Icon56AddCircleOutline, Icon56CheckCircleOutline, Icon56GalleryOutline } from '@vkontakte/icons';\n\nclass App extends Component {\n\tstate = {\n\t\tactivePanel: 'home',\n\t\tform: {\n\t\t\tname: null,\n\t\t\tdescription: null,\n\t\t\timg:null,\n\t\t\tpodcast: {\t\t\t//здесь хранится подкаст\n\t\t\t\ttimecode: [\n\t\t\t\t\t{time: '00:20', title: \"Основная тема подкаста\"}\n\t\t\t\t], \t//массив time кодов\n\t\t\t\tmp3: \"h\"\t\t//сам подкаст\n\t\t\t}\n\t\t},\n\t}\n\n\tgo = (activePanel) => { //смена панелей\n\t\tthis.setState({ activePanel})\n\t}\n\n\tonChange = (e) => { \n\t\tconst { name, value } = e.currentTarget;\n\t\tthis.setState({ form: { ...this.state.form, [name]: value }});\n\t}\n\t\n\tonChangeFile = (input) => {\t//хагрузка картинки\n\t\tconst { form } = this.state;\n\t\tif (input.currentTarget.files && input.currentTarget.files[0]) {\n\t\t\tvar reader = new FileReader();\n\t\t\treader.onload = async (e) => {\n\t\t\tawait this.setState({ form:{...form, img: e.target.result}})\n\t\t\t};\n\t\t\treader.readAsDataURL(input.currentTarget.files[0]);\n\t}\n}\n\n\trender() {\n\t\tconst { user, activePanel, form} = this.state;\n\t\treturn (\n\t\t\t<Root>\n\t\t\t\t<View activePanel={activePanel}>\n\t\t\t\t\t<Panel id='home'>\n\t\t\t\t\t\t<PanelHeader>Подкасты</PanelHeader>\n\t\t\t\t\t\t<Placeholder action={<Button onClick={() => this.go('create_podcats')}>Добавить подкаст</Button>} header=\"Добавьте первый подкаст\" icon={<Icon56AddCircleOutline />} stretched>\n\t\t\t\t\t\t\tДобавляйте, редактируйте и делитесь подкастами вашего сообщества.\n\t\t\t\t\t\t</Placeholder>\n\t\t\t\t\t</Panel>\n\n\t\t\t\t\t<Panel id='create_podcats'>\n\t\t\t\t\t\t<PanelHeader left={<PanelHeaderBack onClick={() => this.go('home')}/>}>Новый подкаст</PanelHeader>\n\t\t\t\t\t\t<SimpleCell disabled before={form.img  ? <Avatar src={form.img} size={72} mode='image' /> : <File mode='secondary' style={{ height: 72, width:72, display: 'flex', alignItems: 'center', justifyContent: 'center'}} controlSize='m' onChange={this.onChangeFile}><Icon56GalleryOutline width={28} height={28}/></File>}>\n\t\t\t\t\t\t\t<FormLayout><Input value={form.name} name=\"name\" onChange={this.onChange} placeholder='Введите название подкаста' top=\"Название\"/></FormLayout>\n\t\t\t\t\t\t</SimpleCell>\n\t\t\t\t\t\t<FormLayout>\n\t\t\t\t\t\t\t<Textarea value={form.description} name=\"description\" onChange={this.onChange} top=\"Описание подкаста\"/>\n\t\t\t\t\t\t</FormLayout>\n\t\t\t\t\t\t<Div>\n\t\t\t\t\t\t\t{form.podcast.mp3 == null ?\n\t\t\t\t\t\t\t\t<Placeholder action={<Button onClick={() => this.setState({ podcast: {...form.podcast, mp3: \"fff\"}})} mode='outline'>Загрузить файл</Button>} header=\"Загрузите Ваш подкаст\">Выберите готовый аудиофайл из вашего телефона и добавьте его</Placeholder>:\n\t\t\t\t\t\t\t\t<SimpleCell indicator=\"59:16\">My_podcast.mp3</SimpleCell>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</Div>\n\t\t\t\t\t\t<Separator />\n\t\t\t\t\t\t<FormLayout>\n\t\t\t\t\t\t\t<Checkbox>Ненормативный контент</Checkbox>\n\t\t\t\t\t\t\t<Checkbox>Исключить эпизод из экспорта</Checkbox>\n\t\t\t\t\t\t\t<Checkbox defaultChecked>Трейлер подкаста</Checkbox>\n\t\t\t\t\t\t</FormLayout>\n\t\t\t\t\t\t<SimpleCell expandable description=\"Всем пользователям\">Кому доступен данный подкаст</SimpleCell>\n\t\t\t\t\t\t<SimpleCell multiline description=\"При публикации записи с эпизодом, он становится доступным для всех пользователей\">\n\t\t\t\t\t\t</SimpleCell>\n\t\t\t\t\t\t<Div>\n\t\t\t\t\t\t\t<Button size='xl' onClick={() => this.go('snippet')} disabled={form.img == '' || form.name == '' || form.description == '', form.podcast.mp3 == ''}>Дальше</Button>\n\t\t\t\t\t\t</Div>\n\t\t\t\t\t</Panel>\n\n\t\t\t\t\t<Panel id='snippet'>\n\t\t\t\t\t\t<PanelHeader left={<PanelHeaderBack onClick={() => this.go('create_podcats')}/>}>Новый подкаст</PanelHeader>\n\t\t\t\t\t\t<Group>\n\t\t\t\t\t\t\t<RichCell text={<Link>ПараDogs</Link>} caption={\"Длительность: 59:16\"} before={<Avatar size={72} mode='image' src={form.img}/>}>\n\t\t\t\t\t\t\t\t{form.name}\n\t\t\t\t\t\t\t</RichCell>\n\t\t\t\t\t\t</Group>\n\t\t\t\t\t\t<Group header={<Header>Описание</Header>}>\n\t\t\t\t\t\t\t<Div style={{ paddingTop: 0}}>\n\t\t\t\t\t\t\t\t<Text>\n\t\t\t\t\t\t\t\t{form.description}\n\t\t\t\t\t\t\t\t</Text>\n\t\t\t\t\t\t\t</Div>\n\t\t\t\t\t\t</Group>\n\t\t\t\t\t\t<Group header={<Header>Содержание</Header>}>\n\t\t\t\t\t\t\t<List>\n\t\t\t\t\t\t\t\t{form.podcast.timecode.map(timecode => \n\t\t\t\t\t\t\t\t\t<SimpleCell><Link>{timecode.time}</Link> — {timecode.title}</SimpleCell>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</List>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t</Group>\n\t\t\t\t\t\t\n\t\t\t\t\t\t<FixedLayout vertical='bottom'>\n\t\t\t\t\t\t\t<Separator />\n\t\t\t\t\t\t\t<Div>\n\t\t\t\t\t\t\t\t<Button size='xl' onClick={() => this.go('publish')}>Опубликовать подкаст</Button>\n\t\t\t\t\t\t\t</Div>\n\t\t\t\t\t\t</FixedLayout>\n\t\t\t\t\t</Panel>\n\n\t\t\t\t\t<Panel id='editor'>\n\t\t\t\t\t\t<PanelHeader left={<PanelHeaderBack onClick={() => this.go('create_podcats')} />}>Редактирование</PanelHeader>\n\t\t\t\t\t\t<div>\n\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<Group header={<Header mode='secondary'>Таймкоды</Header>}>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t</Group>\n\t\t\t\t\t</Panel>\n\n\t\t\t\t\t<Panel id='publish'>\n\t\t\t\t\t\t\t<PanelHeader>Подкасты</PanelHeader>\n\t\t\t\t\t\t\t<Placeholder action={<Button>Поделиться подкастом</Button>} icon={<Icon56CheckCircleOutline fill=\"var(--accent)\"/>} header=\"Подкаст добавлен\" stretched>\n\t\t\t\t\t\t\tРаскажите своим подписчикам о новом подкасте, чтобы получить больше слушателей.\n\t\t\t\t\t\t\t</Placeholder>\n\t\t\t\t\t</Panel>\n\t\t\t\t</View>\n\t\t\t</Root>\n\t\t)\n\t}\n}\n\nexport default App;\n\n","import \"core-js/features/map\";\nimport \"core-js/features/set\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport App from \"./App\";\n\n// Init VK  Mini App\nbridge.send(\"VKWebAppInit\");\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nif (process.env.NODE_ENV === \"development\") {\n  import(\"./eruda\").then(({ default: eruda }) => {}); //runtime download\n}\n"],"sourceRoot":""}